{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nconst CalculateWinner = squares => {\n  const winningLines = [[0, 1, 2], [0, 3, 6], [0, 4, 8], [1, 4, 7], [2, 4, 6], [2, 5, 8], [3, 4, 5], [6, 7, 8]];\n\n  for (let i = 0; i < winningLines.length; i = i + 1) {\n    const _winningLines$i = _slicedToArray(winningLines[i], 3),\n          a = _winningLines$i[0],\n          b = _winningLines$i[1],\n          c = _winningLines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        line: winningLines[i],\n        winner: squares[a],\n        isDraw: false\n      };\n    }\n\n    ;\n  }\n\n  return {\n    winner: null,\n    line: null,\n    isDraw\n  };\n};\n\nexport default CalculateWinner;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/helpers/CalculateWinner.js"],"names":["CalculateWinner","squares","winningLines","i","length","a","b","c","line","winner","isDraw"],"mappings":";;AAAA,MAAMA,eAAe,GAAGC,OAAO,IAAI;AACjC,QAAMC,YAAY,GAAG,CACnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADmB,EAEnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFmB,EAGnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHmB,EAInB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJmB,EAKnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALmB,EAMnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANmB,EAOnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPmB,EAQnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARmB,CAArB;;AAUA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,YAAY,CAACE,MAAhC,EAAwCD,CAAC,GAAGA,CAAC,GAAC,CAA9C,EAAiD;AAAA,2CAC/BD,YAAY,CAACC,CAAD,CADmB;AAAA,UACxCE,CADwC;AAAA,UACtCC,CADsC;AAAA,UACpCC,CADoC;;AAE/C,QAAIN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxE,aAAO;AACLC,QAAAA,IAAI,EAAEN,YAAY,CAACC,CAAD,CADb;AAELM,QAAAA,MAAM,EAAER,OAAO,CAACI,CAAD,CAFV;AAGLK,QAAAA,MAAM,EAAE;AAHH,OAAP;AAKD;;AAAA;AACF;;AACD,SAAO;AACLD,IAAAA,MAAM,EAAE,IADH;AAELD,IAAAA,IAAI,EAAE,IAFD;AAGLE,IAAAA;AAHK,GAAP;AAKD,CA1BD;;AA4BA,eAAeV,eAAf","sourcesContent":["const CalculateWinner = squares => {\n  const winningLines = [\n    [0,1,2],\n    [0,3,6],\n    [0,4,8],\n    [1,4,7],\n    [2,4,6],\n    [2,5,8],\n    [3,4,5],\n    [6,7,8]\n  ]\n  for(let i = 0; i < winningLines.length; i = i+1) {\n    const [a,b,c] = winningLines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        line: winningLines[i],\n        winner: squares[a],\n        isDraw: false\n      };\n    };\n  }\n  return {\n    winner: null,\n    line: null,\n    isDraw\n  }\n}\n\nexport default CalculateWinner;\n"]},"metadata":{},"sourceType":"module"}