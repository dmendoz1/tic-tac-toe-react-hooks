{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js\";\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const _useState = useState(Array(9).fill(null)),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHistory = _useState2[1];\n\n  const _useState3 = useState(Array(9).fill(null)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        squares = _useState4[0],\n        setSquares = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isXnext = _useState6[0],\n        setXnext = _useState6[1];\n\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n\n  const handleClick = index => {\n    if (squares[index] || winnerObject.winner || winnerObject.isDraw) return;\n    const newSquares = [...squares];\n    newSquares[index] = isXnext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXnext(!isXnext);\n  };\n\n  let status;\n\n  if (winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if (winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return React.createElement(Square, {\n      highlightWinner: winnerHighlight && winnerHighlight.includes(i),\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  };\n\n  const restartGame = _ => {\n    const resetSquares = Array(9).fill(null);\n    setSquares(resetSquares);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"TIC TAC TOE\"), React.createElement(\"p\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, status), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)), React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: restartGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Restart Game\"));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js"],"names":["React","useState","Square","calculateWinner","Board","_","Array","fill","history","setHistory","squares","setSquares","isXnext","setXnext","winnerObject","winnerHighlight","line","handleClick","index","winner","isDraw","newSquares","status","renderSquare","i","includes","restartGame","resetSquares"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,MAAMC,KAAK,GAAGC,CAAC,IAAI;AAAA,oBACaJ,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CADrB;AAAA;AAAA,QACVC,OADU;AAAA,QACDC,UADC;;AAAA,qBAEaR,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAFrB;AAAA;AAAA,QAEVG,OAFU;AAAA,QAEDC,UAFC;;AAAA,qBAGWV,QAAQ,CAAC,IAAD,CAHnB;AAAA;AAAA,QAGVW,OAHU;AAAA,QAGDC,QAHC;;AAIjB,QAAMC,YAAY,GAAGX,eAAe,CAACO,OAAD,CAApC;AACA,QAAMK,eAAe,GAAGD,YAAY,CAACE,IAArC;;AACA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAGR,OAAO,CAACQ,KAAD,CAAP,IAAkBJ,YAAY,CAACK,MAA/B,IAAyCL,YAAY,CAACM,MAAzD,EAAiE;AACjE,UAAMC,UAAU,GAAG,CAAC,GAAGX,OAAJ,CAAnB;AACAW,IAAAA,UAAU,CAACH,KAAD,CAAV,GAAoBN,OAAO,GAAG,GAAH,GAAS,GAApC;AACAD,IAAAA,UAAU,CAACU,UAAD,CAAV;AACAR,IAAAA,QAAQ,CAAC,CAACD,OAAF,CAAR;AACD,GAND;;AAQA,MAAIU,MAAJ;;AACA,MAAGR,YAAY,CAACK,MAAhB,EAAwB;AACtBG,IAAAA,MAAM,GAAG,eAAeR,YAAY,CAACK,MAArC;AACD,GAFD,MAEO,IAAGL,YAAY,CAACM,MAAhB,EAAwB;AAC7BE,IAAAA,MAAM,GAAG,eAAT;AACD,GAFM,MAEA;AACLA,IAAAA,MAAM,GAAG,mBAAmBV,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAT;AACD;;AAED,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACxB,WACE,oBAAC,MAAD;AACE,MAAA,eAAe,EAAET,eAAe,IAAIA,eAAe,CAACU,QAAhB,CAAyBD,CAAzB,CADtC;AAEE,MAAA,KAAK,EAAEd,OAAO,CAACc,CAAD,CAFhB;AAGE,MAAA,OAAO,EAAE,MAAKP,WAAW,CAACO,CAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD;;AAUA,QAAME,WAAW,GAAGrB,CAAC,IAAI;AACvB,UAAMsB,YAAY,GAAGrB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAArB;AACAI,IAAAA,UAAU,CAACgB,YAAD,CAAV;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBL,MAAvB,CAHF,EAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CAJF,EASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CATF,EAcE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CAdF,EAmBE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEG,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,CADF;AAuBD,CA7DD;;AA+DA,eAAetB,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const [history, setHistory] = useState(Array(9).fill(null));\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXnext, setXnext] = useState(true);\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n  const handleClick = index => {\n    if(squares[index] || winnerObject.winner || winnerObject.isDraw) return;\n    const newSquares = [...squares];\n    newSquares[index] = isXnext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXnext(!isXnext);\n  }\n\n  let status;\n  if(winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if(winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return (\n      <Square\n        highlightWinner={winnerHighlight && winnerHighlight.includes(i)}\n        value={squares[i]}\n        onClick={() =>handleClick(i)}\n      />\n    )\n  }\n\n  const restartGame = _ => {\n    const resetSquares = Array(9).fill(null);\n    setSquares(resetSquares);\n  };\n\n  return (\n    <div className=\"board\">\n      <h2>TIC TAC TOE</h2>\n\n      <p className=\"status\">{status}</p>\n      <div className=\"square-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <button className=\"reset\" onClick={restartGame}>Restart Game</button>\n    </div>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}