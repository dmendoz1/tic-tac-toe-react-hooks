{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js\";\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const _useState = useState([Array(9).fill(null)]),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHistory = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stepNumber = _useState4[0],\n        setStepNumber = _useState4[1];\n\n  const squares = history[stepNumber].slice();\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isXnext = _useState6[0],\n        setXnext = _useState6[1];\n\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n  console.log('history', history);\n  console.log('squares', squares);\n\n  const handleClick = index => {\n    if (squares[index] || winnerObject.winner) return;\n    squares[index] = isXnext ? 'X' : 'O';\n    setHistory([...history.slice(0, stepNumber + 1), squares]);\n    setStepNumber(stepNumber + 1);\n    setXnext(!isXnext);\n  };\n\n  let status;\n\n  if (winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if (winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return React.createElement(Square, {\n      highlightWinner: winnerHighlight && winnerHighlight.includes(i),\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  };\n\n  const jumpTo = move => {\n    setStepNumber(move);\n    setXnext(move % 2 === 0);\n  };\n\n  const renderStepButtons = history.map((step, move) => {\n    const description = move ? 'got back to step #' + move : 'Start game!';\n    return React.createElement(\"li\", {\n      key: move,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => jumpTo(move),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" \", description));\n  });\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"TIC TAC TOE\"), React.createElement(\"p\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, status), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)), React.createElement(\"div\", {\n    className: \"steps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, renderStepButtons)));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js"],"names":["React","useState","Square","calculateWinner","Board","_","Array","fill","history","setHistory","stepNumber","setStepNumber","squares","slice","isXnext","setXnext","winnerObject","winnerHighlight","line","console","log","handleClick","index","winner","status","isDraw","renderSquare","i","includes","jumpTo","move","renderStepButtons","map","step","description"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const squares = history[stepNumber].slice();\n  const [isXnext, setXnext] = useState(true);\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n  console.log('history', history);\n  console.log('squares', squares);\n\n\n  const handleClick = index => {\n    if(squares[index] || winnerObject.winner) return;\n    squares[index] = isXnext ? 'X' : 'O';\n    setHistory([...history.slice(0, stepNumber + 1), squares]);\n    setStepNumber(stepNumber + 1);\n    setXnext(!isXnext);\n\n  }\n\n  let status;\n  if(winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if(winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return (\n      <Square\n        highlightWinner={winnerHighlight && winnerHighlight.includes(i)}\n        value={squares[i]}\n        onClick={() =>handleClick(i)}\n      />\n    )\n  }\n\n  const jumpTo = move => {\n    setStepNumber(move);\n    setXnext((move % 2) === 0);\n  };\n\n  const renderStepButtons = history.map((step, move) => {\n      const description = move ? 'got back to step #' + move : 'Start game!';\n      return <li key={move}><button onClick={() => jumpTo(move)}> {description}</button></li>\n  });\n\n  return (\n    <div className=\"board\">\n      <h2>TIC TAC TOE</h2>\n\n      <p className=\"status\">{status}</p>\n      <div className=\"square-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div className=\"steps\">\n        <ol>\n          {renderStepButtons}\n        </ol>\n      </div>\n    </div>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}