{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js\";\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const _useState = useState([Array(9).fill(null)]),\n        _useState2 = _slicedToArray(_useState, 2),\n        history = _useState2[0],\n        setHistory = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stepNumber = _useState4[0],\n        setStepNumber = _useState4[1];\n\n  const squares = history[stepNumber].slice();\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isXnext = _useState6[0],\n        setXnext = _useState6[1];\n\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n\n  const handleClick = index => {\n    if (squares[index] || winnerObject.winner || winnerObject.isDraw) return;\n    squares[index] = isXnext ? 'X' : 'O';\n    setHistory([...history.slice(0, stepNumber + 1), squares]);\n    setXnext(!isXnext);\n  };\n\n  let status;\n\n  if (winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if (winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return React.createElement(Square, {\n      highlightWinner: winnerHighlight && winnerHighlight.includes(i),\n      value: squares[i],\n      onClick: () => handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"TIC TAC TOE\"), React.createElement(\"p\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, status), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    className: \"square-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/tic-tac-toe-react-hooks/src/components/Board.js"],"names":["React","useState","Square","calculateWinner","Board","_","Array","fill","history","setHistory","stepNumber","setStepNumber","squares","slice","isXnext","setXnext","winnerObject","winnerHighlight","line","handleClick","index","winner","isDraw","status","renderSquare","i","includes"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const squares = history[stepNumber].slice();\n  const [isXnext, setXnext] = useState(true);\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n  const handleClick = index => {\n    if(squares[index] || winnerObject.winner || winnerObject.isDraw) return;\n    squares[index] = isXnext ? 'X' : 'O';\n    setHistory([...history.slice(0, stepNumber + 1), squares]);\n    setXnext(!isXnext);\n  }\n\n  let status;\n  if(winnerObject.winner) {\n    status = 'winner is ' + winnerObject.winner;\n  } else if(winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return (\n      <Square\n        highlightWinner={winnerHighlight && winnerHighlight.includes(i)}\n        value={squares[i]}\n        onClick={() =>handleClick(i)}\n      />\n    )\n  }\n\n\n  return (\n    <div className=\"board\">\n      <h2>TIC TAC TOE</h2>\n\n      <p className=\"status\">{status}</p>\n      <div className=\"square-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"square-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}