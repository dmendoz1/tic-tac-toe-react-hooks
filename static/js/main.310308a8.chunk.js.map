{"version":3,"sources":["components/Square.js","helpers/CalculateWinner.js","components/Board.js","App.js","index.js"],"names":["Square","_ref","value","onClick","squareClass","highlightWinner","react_default","a","createElement","className","CalculateWinner","squares","winningLines","i","length","_winningLines$i","Object","slicedToArray","b","c","line","winner","isDraw","Board","_","_useState","useState","Array","fill","_useState2","history","setHistory","_useState3","_useState4","stepNumber","setStepNumber","slice","_useState5","_useState6","isXnext","setXnext","winnerObject","calculateWinner","winnerHighlight","console","log","status","renderSquare","components_Square","includes","index","concat","toConsumableArray","renderStepButtons","map","step","move","description","key","jumpTo","App","components_Board","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.310308a8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = ({value, onClick, highlightWinner}) => {\n  const squareClass = highlightWinner ? 'square highlight' : 'square';\n  return (\n    <div className={squareClass} onClick={onClick}>\n      {value}\n    </div>\n  )\n};\n\nexport default Square;\n","const CalculateWinner = squares => {\n  const winningLines = [\n    [0,1,2],\n    [0,3,6],\n    [0,4,8],\n    [1,4,7],\n    [2,4,6],\n    [2,5,8],\n    [3,4,5],\n    [6,7,8]\n  ]\n  for(let i = 0; i < winningLines.length; i = i+1) {\n    const [a,b,c] = winningLines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        line: winningLines[i],\n        winner: squares[a],\n        isDraw: false\n      };\n    };\n  }\n\n  let isDraw = true;\n\n  for(let i=0;i<squares.length; i = i+1) {\n    if(squares[i] === null) {\n      isDraw = false\n    }\n  }\n\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw\n  }\n}\n\nexport default CalculateWinner;\n","import React, {useState} from 'react';\nimport Square from './Square';\nimport calculateWinner from '../helpers/CalculateWinner';\n\nconst Board = _ => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const squares = history[stepNumber].slice();\n  const [isXnext, setXnext] = useState(true);\n  const winnerObject = calculateWinner(squares);\n  const winnerHighlight = winnerObject.line;\n  console.log('history', history);\n  console.log('squares', squares);\n\n\n  const handleClick = index => {\n    if(squares[index] || winnerObject.winner) return;\n    squares[index] = isXnext ? 'X' : 'O';\n    setHistory([...history.slice(0, stepNumber + 1), squares]);\n    setStepNumber(stepNumber + 1);\n    setXnext(!isXnext);\n\n  }\n\n  let status;\n  if(winnerObject.winner) {\n    status = 'The winner is ' + winnerObject.winner + ', congrats!!';\n  } else if(winnerObject.isDraw) {\n    status = 'It is a draw!';\n  } else {\n    status = 'Next player: ' + (isXnext ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return (\n      <Square\n        highlightWinner={winnerHighlight && winnerHighlight.includes(i)}\n        value={squares[i]}\n        onClick={() =>handleClick(i)}\n      />\n    )\n  }\n\n  const jumpTo = move => {\n    setStepNumber(move);\n    setXnext((move % 2) === 0);\n  };\n\n  const renderStepButtons = history.map((step, move) => {\n      const description = move ? 'got back to step #' + move : 'Start game!';\n      return <li key={move}><button onClick={() => jumpTo(move)}> {description}</button></li>\n  });\n\n  return (\n    <div className=\"board\">\n      <h2 className=\"title\">TIC TAC TOE</h2>\n\n      <p className=\"status\">{status}</p>\n      <div className=\"squares\">\n        <div className=\"square-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"square-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"square-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n      <div className=\"steps\">\n        <ul>\n          {renderStepButtons}\n        </ul>\n      </div>\n      <div className=\"clearfix\"></div>\n    </div>\n  )\n}\n\nexport default Board;\n","import React from 'react';\nimport Board from './components/Board';\n\nconst App = _ => {\n  return (\n    <Board />\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}